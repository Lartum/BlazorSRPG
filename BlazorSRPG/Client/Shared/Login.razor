@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IAuthService Authservice
@inject IToastService ToastService

Please Login to continue or <a href="register">Register</a> to create a new account <br >

<EditForm Model="user" OnValidSubmit="HandleLogin">
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control"></InputText>
        <ValidationMessage For="(()=> user.Email)" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText type="password" id="password" @bind-Value="user.Password" class="form-control"></InputText>
        <ValidationMessage For="(()=> user.Password)" />
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@code {
    UserLogin user = new UserLogin();

    private async void HandleLogin ()
    {
        var result = await Authservice.Login(user);
        if (result.Success)
        {
            await LocalStorage.SetItemAsync<string>("authToken", result.Data);
            await AuthenticationStateProvider.GetAuthenticationStateAsync();
        }
        else
        {
            ToastService.ShowError(result.Message);
        }

    }
}
